{\rtf1\ansi\ansicpg1252\cocoartf2818
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 public class Graph \{\
\
    public static boolean Connected(boolean[][] A) \{\
        int n = A.length;\
        return ConnectedHelper(A, n);\
    \}\
\
    private static boolean ConnectedHelper(boolean[][] A, int n) \{\
        // Base case: if the matrix only has one vertex\
        if (n == 1) \{\
            return true;  //one vertex graph is connected by definition\
        \}\
\
        boolean[][] subMatrix = new boolean[n - 1][n - 1];\
\
        for (int i = 0; i < n - 1; i++) \{\
            for (int j = 0; j < n - 1; j++) \{\
                subMatrix[i][j] = A[i][j];\
            \}\
        \}\
\
        if (!ConnectedHelper(subMatrix, n - 1)) \{\
            return false;\
        \}\
\
        for (int j = 0; j < n - 1; j++) \{\
            if (A[n - 1][j]) \{\
                return true;\
            \}\
        \}\
\
        return false;\
    \}\
\
    public static void main(String[] args) \{\
        // Matrix A\
        boolean[][] A = \{\
                \{false, false, true, true, false\},\
                \{false, false, true, false, false\},\
                \{true, true, false, true, false\},\
                \{true, false, true, false, true\},\
                \{false, false, false, true, false\}\
        \};\
\
        boolean isConnected = Connected(A);  //Check If Connected or not\
\
        System.out.println("Is the graph connected? " + isConnected);\
    \}\
\}}