Reasoning:
The to_BI_RLE8_EM function appears to execute encoding using a modified version of the Run-Length Encoding (RLE) method, wherein a pair of variables designating the length of the run and the color of the pixels are used to represent a series of successive pixel values. The function, however, treats a run of pixels as an absolute mode run if it is discovered to be less than 2 pixels, in which case the number of pixels of a different color is encoded before the actual color values. When there are minor absolute mode runs in the pixel values, this is employed to optimize the encoding.
The to_BI_RLE8 function, on the other hand, seems to accomplish encoding using a more straightforward implementation of RLE, combining successive pixel values and representing them as a pair of values denoting the length of the run and the color of the pixels. The function evaluates the following few pixels to determine if they constitute an absolute mode run of length 2 or more, then encodes the data appropriately, if a run of pixels is found to be exactly 1 pixel.
The precise features of the image being encoded determine which function should be used. The to_BI_RLE8 EM function may produce reduced encoded sizes and is therefore recommended if the image comprises a large number of brief absolute mode runs. Instead, using the to BI RLE8 method can be quicker and easier.
There According to the descriptions given above, it seems that the to BI RLE8 EM function, which optimizes the encoding of such runs, is better suited for images that contain tiny absolute mode runs. However, the to_BI_RLE8 method should be adequate and may even be faster as it uses a simpler form of encoding provided the image does not contain a lot of little absolute mode runs.
